openapi: 3.0.3
info:
  title: MovieBase API
  version: 1.0.0
  description: MoviBase social network
paths:
  /api/active-chats/{id}/:
    get:
      operationId: active_chats_list
      description: Получить список активных чатов
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - active-chats
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileShort'
          description: ''
  /api/add-movie/:
    post:
      operationId: add_movie_create
      description: Добавить фильм
      tags:
      - add-movie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieCreate'
          description: ''
  /api/chat/{user_id}/{recipient_id}/:
    get:
      operationId: chat_list
      description: Получить список сообщений в чате
      parameters:
      - in: path
        name: recipient_id
        schema:
          type: string
        required: true
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/feed/:
    get:
      operationId: feed_list
      description: Получить главную ленту фильмов
      tags:
      - feed
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
          description: ''
  /api/kinopoisk-movie/{kinopoisk_id}/:
    get:
      operationId: kinopoisk_movie_retrieve
      description: Получить данные о фильме по ID
      parameters:
      - in: path
        name: kinopoisk_id
        schema:
          type: string
        required: true
      tags:
      - kinopoisk-movie
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Movie details
          description: ''
  /api/kinopoisk-movies/{title}/:
    get:
      operationId: kinopoisk_movies_retrieve
      description: Получить список фильмов по ключевому слову
      parameters:
      - in: path
        name: title
        schema:
          type: string
        required: true
      tags:
      - kinopoisk-movies
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of movies
          description: ''
  /api/login/:
    get:
      operationId: login_retrieve
      description: Метод запрещен
      tags:
      - login
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: login_create
      description: Войти по имени пользователя и паролю
      tags:
      - login
      requestBody:
        content:
          username:
            schema:
              type: string
          password:
            schema:
              type: string
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Login successful
          description: ''
  /api/logout/:
    post:
      operationId: logout_create
      description: Выход
      tags:
      - logout
      requestBody:
        content:
          refresh_token:
            schema:
              type: string
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Logout successful
          description: ''
  /api/movie/{id}/:
    get:
      operationId: movie_retrieve
      description: Получить, обновить, удалить карточку фильма
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - movie
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    put:
      operationId: movie_update
      description: Получить, обновить, удалить карточку фильма
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - movie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    patch:
      operationId: movie_partial_update
      description: Получить, обновить, удалить карточку фильма
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - movie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMovie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMovie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMovie'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    delete:
      operationId: movie_destroy
      description: Получить, обновить, удалить карточку фильма
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - movie
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/notification/{id}/:
    delete:
      operationId: notification_destroy
      description: Удалить уведомление
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/{id}/:
    get:
      operationId: notifications_list
      description: Получить список уведомлений
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /api/profile-feed/{id}/:
    get:
      operationId: profile_feed_list
      description: Получить ленту фильмов пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - profile-feed
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
          description: ''
  /api/profile/{id}/:
    get:
      operationId: profile_retrieve
      description: Получить, обновить, удалить профиль
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: profile_update
      description: Получить, обновить, удалить профиль
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: profile_partial_update
      description: Получить, обновить, удалить профиль
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: profile_destroy
      description: Получить, обновить, удалить профиль
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/profiles/:
    get:
      operationId: profiles_list
      description: Получить список пользователей
      tags:
      - profiles
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileShort'
          description: ''
  /api/register/:
    post:
      operationId: register_create
      description: Создать аккаунт
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          $ref: '#/components/schemas/ProfileShort'
        body:
          type: string
          maxLength: 300
        created:
          type: string
          format: date-time
          readOnly: true
        movie:
          type: string
          format: uuid
      required:
      - body
      - created
      - id
      - movie
      - owner
    Like:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          $ref: '#/components/schemas/ProfileShort'
      required:
      - id
      - owner
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sender:
          $ref: '#/components/schemas/ProfileShort'
        recipient:
          $ref: '#/components/schemas/ProfileShort'
        body:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - id
      - recipient
      - sender
      - timestamp
    Movie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          $ref: '#/components/schemas/ProfileShort'
        title:
          type: string
          maxLength: 200
        user_rating:
          type: number
          format: double
        user_review:
          type: string
          nullable: true
          maxLength: 500
        description:
          type: string
          nullable: true
          maxLength: 500
        poster_url:
          type: string
          nullable: true
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        kinopoisk_url:
          type: string
          maxLength: 300
        likes:
          type: array
          items:
            $ref: '#/components/schemas/Like'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
      required:
      - comments
      - created
      - id
      - kinopoisk_url
      - likes
      - owner
      - title
      - user_rating
    MovieCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        user_rating:
          type: number
          format: double
        user_review:
          type: string
          nullable: true
          maxLength: 500
        description:
          type: string
          nullable: true
          maxLength: 500
        poster_url:
          type: string
          nullable: true
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        kinopoisk_url:
          type: string
          maxLength: 300
      required:
      - created
      - kinopoisk_url
      - title
      - user_rating
    MovieShort:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
      required:
      - id
      - title
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        recipient:
          $ref: '#/components/schemas/ProfileShort'
        sender:
          $ref: '#/components/schemas/ProfileShort'
        movie:
          $ref: '#/components/schemas/MovieShort'
        message:
          $ref: '#/components/schemas/Message'
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - message
      - movie
      - notification_type
      - recipient
      - sender
    NotificationTypeEnum:
      enum:
      - follow
      - like
      - comment
      - message
      type: string
      description: |-
        * `follow` - Follow
        * `like` - Like
        * `comment` - Comment
        * `message` - Message
    PatchedMovie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          $ref: '#/components/schemas/ProfileShort'
        title:
          type: string
          maxLength: 200
        user_rating:
          type: number
          format: double
        user_review:
          type: string
          nullable: true
          maxLength: 500
        description:
          type: string
          nullable: true
          maxLength: 500
        poster_url:
          type: string
          nullable: true
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        kinopoisk_url:
          type: string
          maxLength: 300
        likes:
          type: array
          items:
            $ref: '#/components/schemas/Like'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PatchedProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        username:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        birthday:
          type: string
          format: date
          nullable: true
        profile_image:
          type: string
          format: uri
          nullable: true
        followers:
          type: string
          readOnly: true
        followings:
          type: string
          readOnly: true
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        username:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        birthday:
          type: string
          format: date
          nullable: true
        profile_image:
          type: string
          format: uri
          nullable: true
        followers:
          type: string
          readOnly: true
        followings:
          type: string
          readOnly: true
      required:
      - followers
      - followings
      - id
    ProfileShort:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        username:
          type: string
          nullable: true
          maxLength: 100
        profile_image:
          type: string
          format: uri
          nullable: true
      required:
      - id
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
